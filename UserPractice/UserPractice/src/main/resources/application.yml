server:
  port : 8081
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/micro
    username: root
    password: Badri@2001
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
      hibernate:
        ddl-auto: update
        show-sql: true
  config:
    import: configserver:http://localhost:8085

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer: https://dev-93715225.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oaa0gl9zwOeSerQ85d7
            client-secret: uIQsvTsQyqx4zECLq1YfSYmvF8tB8tKEEG4rKhGw

        provider:
          okta:
            issuer: https://dev-93715225.okta.com/oauth2/default




#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#  server-url:
#    defaultZone: http://localhost:8761/eureka
#
#
spring.application.name: USER-SERVICE

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreakers:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpen: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 2s

okta:
  oauth2:
    issuer: https://dev-93715225.okta.com/oauth2/default
    audience: api://default
    client-id: 0oaa0gl9zwOeSerQ85d7

